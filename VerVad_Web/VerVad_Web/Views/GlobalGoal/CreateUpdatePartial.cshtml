@model VerVad_Web.ViewModels.GlobalGoals.GlobalGoalCreateUpdate

<div class="jumbotron sm-jumbo" style="padding-left:45px; padding-right:45px;">
    @if (Model.GlobalGoal.Id == 0)
    {
        <h4 style="margin-top:0px;">OPRET VERDENSMÅL</h4>
    }
    else
    {
        <h4 style="margin-top:0px;">REDIGER VERDENSMÅL</h4>
    }
    <hr style="border: 0.5px solid black;" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-3">        
        @Html.LabelFor(model => model.GlobalGoal.Latitude, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.GlobalGoal.Latitude, new { htmlAttributes = new { @class = "form-control remove-border-radius", required = "true" } })
        @Html.ValidationMessageFor(model => model.GlobalGoal.Latitude, "", new { @class = "text-danger" })

        @Html.LabelFor(model => model.GlobalGoal.Longitude, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.GlobalGoal.Longitude, new { htmlAttributes = new { @class = "form-control remove-border-radius", required = "true" } })
        @Html.ValidationMessageFor(model => model.GlobalGoal.Longitude, "", new { @class = "text-danger" })

        @Html.LabelFor(model => model.GlobalGoal.ImgURL, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.GlobalGoal.ImgURL, new { htmlAttributes = new { @class = "form-control remove-border-radius", required = "true" } })
        @Html.ValidationMessageFor(model => model.GlobalGoal.ImgURL, "", new { @class = "text-danger" })

        <button type="button" class="btn-sm btn-labeled btn-primary remove-border-radius-border" style="margin-top: 15px;">
            <span class="btn-label"><i class="glyphicon glyphicon-picture"></i></span>Tilføj Billede
        </button>
        <img class="col-md-12" src="@Model.GlobalGoal.ImgURL" style="padding:0px; margin-top:15px; max-height: 165px;" />
    </div>
    @for (int i = 0; i < Model.Languages.Count; i++)
    {
        var lang = Model.Languages[i];
        var langText = Model.GlobalGoal.Translation.TranslatedTexts.FirstOrDefault(x => x.TranslationId == Model.GlobalGoal.TranslationId && x.LanguageISO == lang.ISO);
        if (langText == null)
        {
            langText = new ServiceGateways.Entities.TranslationLanguage();
        }
        <div class="form-horizontal col-md-3">
            <label>@lang.Country</label>
            <div style="padding-bottom: 3px">
                <input type="hidden" name="GlobalGoal.Translation.TranslatedTexts[@i].LanguageISO" value="@lang.ISO" />
                <input type="hidden" name="GlobalGoal.Translation.TranslatedTexts[@i].TranslationId" value="@Model.GlobalGoal.TranslationId" />
                @Html.TextBox("GlobalGoal.Translation.TranslatedTexts[" + i + "].Title", langText.Title, new { @class = "form-control remove-border-radius", required = "true", placeholder = "Titel" })
                @Html.ValidationMessage("GlobalGoal.Translation.TranslatedTexts[" + i + "].Title", "", new { @class = "text-danger" })
                <div class="txt-area">
                    @Html.TextArea("GlobalGoal.Translation.TranslatedTexts[" + i + "].Description", langText.Description, new { @class = "form-control remove-border-radius", required = "true", placeholder = "Beskrivelse" })
                    @Html.ValidationMessage("GlobalGoal.Translation.TranslatedTexts[" + i + "].Description", "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    <div class="form-horizontal" align="right">
        <button type="submit" class="btn-sm btn-labeled btn-success remove-border-radius-border" style="margin-top: 15px; margin-right: 15px;">
            <span class="btn-label"><i class="glyphicon glyphicon-floppy-disk"></i></span>Gem & Fortsæt
        </button>
    </div>
    @if (Model.GlobalGoal.Id == 0)
    {

    }
    else
    {
        <div>
            <!-- Nav tabs for children of global goal -->
            <ul class="nav nav-tabs nav-justified nav-btns" style="display:inline-block; margin-top:50px;">
                <li><a class="btn btn-primary" style="border-radius:1px; border-right-color:#4e4d4d;" href="#">Kunst</a></li>
                <li><a class="btn btn-primary" style="border-radius:1px; border-right-color:#4e4d4d;" href="@Url.Action("Index", "ChildrensText", new { id = Model.GlobalGoal.Id})">Tekst</a></li>
                <li><a class="btn btn-primary" style="border-radius:1px; border-right-color:#4e4d4d;" href="#">Landart</a></li>
                <li><a class="btn btn-primary" style="border-radius:1px;" href="#">Musik&Video</a></li>
            </ul>
        </div>
    }
    <a href="@Url.Action("Index", "Home")">Tilbage</a>
</div>
